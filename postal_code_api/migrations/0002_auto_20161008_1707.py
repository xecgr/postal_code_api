# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-10-06 04:40
from __future__ import unicode_literals

from django.db import migrations


def create_locations(apps, schema_editor):
    country_model = apps.get_model("postal_code_api", "Country")
    region_model  = apps.get_model("postal_code_api", "Region")
    province_model  = apps.get_model("postal_code_api", "Province")
    
    country,_  = country_model.objects.get_or_create(
        name        = u'España',
        country_code= 'ES',
    )
    #https://es.wikipedia.org/wiki/ISO_3166-2:ES
    regions = {
        'ES-AN' : u'Andalucía',
        'ES-AR' : u'Aragón',
        'ES-AS' : u'Asturias',
        'ES-CN' : u'Canarias',
        'ES-CB' : u'Cantabria',
        'ES-CM' : u'Castilla La Mancha',
        'ES-CL' : u'Castilla y León',
        'ES-CT' : u'Catalunya',
        'ES-EX' : u'Extremadura',
        'ES-GA' : u'Galicia',
        'ES-IB' : u'Illes Balears',
        'ES-RI' : u'La Rioja',
        'ES-MD' : u'Comunidad de Madrid',
        'ES-MC' : u'Región de Murcia',
        'ES-NC' : u'Navarra',
        'ES-PV' : u'País Vasco',
        'ES-VC' : u'Comunidad Valenciana',
    }
    provinces = {
        'C'  : [ u'A Coruña',                'ES-GA'],
        'VI' : [ u'Álava',                   'ES-PV'],
        'AB' : [ u'Albacete',                'ES-CM'],
        'A'  : [ u'Alicante',                'ES-VC'],
        'AL' : [ u'Almería',                 'ES-AN'],
        'O'  : [ u'Asturias',                'ES-AS'],
        'AV' : [ u'Ávila',                   'ES-CL'],
        'BA' : [ u'Badajoz',                 'ES-EX'],
        'IB' : [ u'Balears',                 'ES-IB'],
        'B'  : [ u'Barcelona',               'ES-CT'],
        'BI' : [ u'Vizcaya',                 'ES-PV'],
        'BU' : [ u'Burgos',                  'ES-CL'],
        'CC' : [ u'Cáceres',                 'ES-EX'],
        'CA' : [ u'Cádiz',                   'ES-AN'],
        'S'  : [ u'Cantabria',               'ES-CB'],
        'CS' : [ u'Castellón',               'ES-VC'],
        'CR' : [ u'Ciudad Real',             'ES-CM'],
        'CO' : [ u'Córdoba',                 'ES-AN'],
        'CU' : [ u'Cuenca',                  'ES-CM'],
        'SS' : [ u'Gipuzcoa',                'ES-PV'],
        'GI' : [ u'Girona',                  'ES-CT'],
        'GR' : [ u'Granada',                 'ES-AN'],
        'GU' : [ u'Guadalajara',             'ES-CM'],
        'H'  : [ u'Huelva',                  'ES-AN'],
        'HU' : [ u'Huesca',                  'ES-AR'],
        'J'  : [ u'Jaén',                    'ES-AN'],
        'LO' : [ u'La Rioja',                'ES-RI'],
        'GC' : [ u'Las Palmas',              'ES-CN'],
        'LE' : [ u'León',                    'ES-CL'],
        'L'  : [ u'Lleida',                  'ES-CT'],
        'LU' : [ u'Lugo',                    'ES-GA'],
        'M'  : [ u'Madrid',                  'ES-MD'],
        'MA' : [ u'Málaga',                  'ES-AN'],
        'MU' : [ u'Murcia',                  'ES-MC'],
        'NA' : [ u'Navarra',                 'ES-NC'],
        'OR' : [ u'Ourense',                 'ES-GA'],
        'P'  : [ u'Palencia',                'ES-CL'],
        'PO' : [ u'Pontevedra',              'ES-GA'],
        'SA' : [ u'Salamanca',               'ES-CL'],
        'TF' : [ u'Santa Cruz de Tenerife',  'ES-CN'],
        'SG' : [ u'Segovia',                 'ES-CL'],
        'SE' : [ u'Sevilla',                 'ES-AN'],
        'SO' : [ u'Soria',                   'ES-CL'],
        'T'  : [ u'Tarragona',               'ES-CT'],
        'TE' : [ u'Teruel',                  'ES-AR'],
        'TO' : [ u'Toledo',                  'ES-CM'],
        'V'  : [ u'Valencia',                'ES-VC'],
        'VA' : [ u'Valladolid',              'ES-CL'],
        'ZA' : [ u'Zamora',                  'ES-CL'],
        'Z'  : [ u'Zaragoza',                'ES-AR'],
    }
    #https://es.wikipedia.org/wiki/Anexo:Provincias_de_Espa%C3%B1a_por_c%C3%B3digo_postal
    official_code__zip_code = {
        'VI' : '01',
        'AB' : '02',
        'A'  : '03',
        'AL' : '04',
        'AV' : '05',
        'BA' : '06',
        'IB' : '07',
        'B'  : '08',
        'BU' : '09',
        'CC' : '10',
        'CA' : '11',
        'CS' : '12',
        'CR' : '13',
        'CO' : '14',
        'C'  : '15',
        'CU' : '16',
        'GI' : '17',
        'GR' : '18',
        'GU' : '19',
        'SS' : '20',
        'H'  : '21',
        'HU' : '22',
        'J'  : '23',
        'LE' : '24',
        'L'  : '25',
        'LO' : '26',
        'LU' : '27',
        'M'  : '28',
        'MA' : '29',
        'MU' : '30',
        'NA' : '31',
        'OR' : '32',
        'O'  : '33',
        'P'  : '34',
        'GC' : '35',
        'PO' : '36',
        'SA' : '37',
        'TF' : '38',
        'S'  : '39',
        'SG' : '40',
        'SE' : '41',
        'SO' : '42',
        'T'  : '43',
        'TE' : '44',
        'TO' : '45',
        'V'  : '46',
        'VA' : '47',
        'BI' : '48',
        'ZA' : '49',
        'Z'  : '50',
    }
    region_code__region = {}
    for region_code,name in regions.iteritems():
        region,_  = region_model.objects.get_or_create(
            country     = country,
            name        = name,
            region_code = region_code
        )
        region_code__region[region_code] = region
    for official_code, name__region_code in provinces.iteritems():
        name,region_code = name__region_code
        region           = region_code__region[region_code]
        zip_code         = official_code__zip_code[official_code]
        province,_  = province_model.objects.get_or_create(
            country         = country,
            region          = region,
            name            = name,
            official_code   = official_code,
            zip_code        = zip_code
        )

def delete_locations(apps, schema_editor):
    country_model = apps.get_model("postal_code_api", "Country")
    country_model.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('postal_code_api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_locations,delete_locations),
    ]
